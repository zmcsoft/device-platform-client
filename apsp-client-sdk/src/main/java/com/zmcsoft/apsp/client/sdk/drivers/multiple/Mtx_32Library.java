package com.zmcsoft.apsp.client.sdk.drivers.multiple;

import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.NativeLongByReference;
import com.sun.jna.ptr.ShortByReference;
import com.sun.jna.win32.StdCallLibrary;

import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.nio.ShortBuffer;
import java.nio.charset.Charset;
import java.util.Arrays;

/**
 * JNA Wrapper for library <b>mtx_32</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Mtx_32Library extends StdCallLibrary {
    //D:\workspace\apap-client\apap-client\drivers\identity\mtx_32.dll
    String JNA_LIBRARY_NAME = "E:\\workspace\\idea\\apap-client\\drivers\\identity\\mtx_32.dll";
    NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Mtx_32Library.JNA_LIBRARY_NAME);
    Mtx_32Library INSTANCE = (Mtx_32Library) Native.loadLibrary(Mtx_32Library.JNA_LIBRARY_NAME, Mtx_32Library.class);

    public static void main(String[] args)throws Exception {
        //打开设备
        int handle = INSTANCE.device_open((short) 8, new NativeLong(9600L));
        //创建长度为128的缓冲区buffer
        ByteBuffer cradNo = ByteBuffer.allocate(20);
        ByteBuffer cradName = ByteBuffer.allocate(10);
        ByteBuffer msg = ByteBuffer.allocate(100);

        INSTANCE.iReadICCardNoAndName(handle,0,cradNo,cradName,msg);
        System.out.println("cardNo = " + new String(cradNo.array(),"gbk"));
        System.out.println("cradName = " + new String(cradName.array(),"gbk"));
        System.out.println("msg = " + new String(msg.array(),"gbk"));

        ByteBuffer aiList = ByteBuffer.allocate(100);
        ByteBuffer aiInput = ByteBuffer.allocate(100);
        IntBuffer intBuffer = IntBuffer.allocate(100);
        int re = INSTANCE.GenF55(handle,ByteBuffer.wrap("0x50 测试长度".getBytes()),ByteBuffer.wrap("A000000333010101".getBytes()),aiList,aiInput,intBuffer);
        System.out.println("aiList = " + new String(aiList.array(),"gbk"));
        System.out.println("aiInput = " + new String(aiInput.array(),"gbk"));
        System.out.println("intBuffer = " + new String(msg.array(),"gbk"));
        System.out.println(re);

        //关闭设备
        INSTANCE.device_close(handle);
    }

    /**
     * 函数功能：与读写器建立连接
     * 函数声明: int __stdcall device_open(__int16 port,unsigned long baud);
     * 入口参数： port 串口号,0 对应 COM1,1 对应 COM2……，取值范围 0~31。
     * baud (入)通讯波特率，9600bps（缺省设置）19200bps，38400bps，57600bps，115200bps
     * 通讯方式为 HID 时，port 和 baud 可为任意值。
     * 返回值: <0 错误
     * >0 通讯设备标识符
     * 举例: icdev=device_open (0,9600);
     */
    int device_open(short port, NativeLong baud);

    /**
     * 函数功能：复位串口配置信息
     * 函数声明：__int16 __stdcall ReSetupComm(int idComDev);
     * 入口参数：idComDev 通讯设备标识符
     * 出口参数：无
     * 返回值： <>0 错误
     * 15
     * =0 正确
     * 举例： int st=0;
     * st=ReSetupComm(icdev);
     */
    short ReSetupComm(int idComDev);

    /**
     * 函数功能： 与读写器断开连接
     * 函数声明: __int16 device_close (int icdev)
     * 入口参数: icdev 表示通讯设备标识符
     * 返回值: <>0 错误
     * =0 正确
     * 举例: st=device_close (icdev);
     */
    short device_close(int icdev);

    /**
     * 函数功能： 获取设备与 PC 机的通讯方式
     * 函数声明: __int16 device_gettype(unsigned char* devicetype);
     * 出口参数: devicetype: 1 字节 设备与 PC 机的通讯方式，1--HID，0--串口
     * 返回值: ≡0
     * 举例:
     * unsigned char cDeviceType=0;
     * st=device_gettype (&cDeviceType);
     *
     * @deprecated use the safer methods {@link #device_gettype(ByteBuffer)} and {@link #device_gettype(Pointer)} instead
     */
    @Deprecated
    short device_gettype(Pointer devicetype);

    /**
     * 函数功能： 获取设备与 PC 机的通讯方式
     * 函数声明: __int16 device_gettype(unsigned char* devicetype);
     * 出口参数: devicetype: 1 字节 设备与 PC 机的通讯方式，1--HID，0--串口
     * 返回值: ≡0
     * 举例:
     * unsigned char cDeviceType=0;
     * st=device_gettype (&cDeviceType);
     */
    short device_gettype(ByteBuffer devicetype);

    /**
     * 函数功能：设置串口通讯波特率
     * 函数声明：__int16 device_setbaud(HANDLE icdev,unsigned char module,unsigned long baud);
     * 入口参数：icdev 通讯设备标识符
     * module 功能模块 1 字节 00H：接触式, 01H：非接触式
     * baud 串口波特率 9600bps（缺省设置）
     * 19200bps
     * 38400bps
     * 57600bps
     * 115200bps
     * 返回值： < 0 错误
     * = 0 正确
     * 举例: __int16 st=device_setbaud(icdev,0,9600); //设置接触式模块的通讯波特率为 9600bps.
     */
    short device_setbaud(int icdev, byte module, NativeLong baud);

    /**
     * Original signature : <code>__int16 device_version(int, unsigned char, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:26</i><br>
     *
     * @deprecated use the safer methods {@link
     */
    @Deprecated
    short device_version(int icdev, byte module, Pointer verlen, Pointer verdata);

    /**
     * Original signature : <code>__int16 device_version(int, unsigned char, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:26</i>
     */
    short device_version(int icdev, byte module, ByteBuffer verlen, ByteBuffer verdata);

    /**
     * 函数功能：读卡器软复位
     * 函数声明：__int16 __stdcall device_reset(HANDLE icdev,unsigned char module);
     * 入口参数：icdev 通讯设备标识符
     * Module 复位模式参数，0 表示接触式模块、1 表示非接触式模块
     * 出口参数：无
     * 返回值： <>0 错误
     * =0 正确
     * 举例： int st=0;
     * st=device_reset(icdev, 0);
     */
    short device_reset(int icdev, byte module);

    /**
     * Original signature : <code>__int16 device_beep(int, unsigned short, unsigned char)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:30</i>
     */
    short device_beep(int icdev, short delaytime, byte times);

    /**
     * 函数功能：控制读写器对应 LED 灯的开关状态
     * 函数声明：__int16 device_ledctrl(HANDLE icdev,unsigned char ledctrl);
     * 入口参数：icdev 通讯设备标识符
     * ledctrl 1 字节 位 7 对应绿灯，0 关，1 开
     * 其他保留
     * 返回值： <>0 错误
     * =0 正确
     * 举例： __int16 st=device_ledctrl(icdev,128);
     */
    short device_ledctrl(int icdev, byte ledctrl);

    /**
     * Original signature : <code>__int16 device_readsnr(int, unsigned char, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:34</i><br>
     *
     * @deprecated use the safer methods {@link #device_readsnr(mtx_32.Mtx_32Library.int, byte, ByteBuffer)} and {@link #device_readsnr(mtx_32.Mtx_32Library.int, byte, Pointer)} instead
     */
    @Deprecated
    short device_readsnr(int icdev, byte nSnrLen, Pointer sSnrData);

    /**
     * Original signature : <code>__int16 device_readsnr(int, unsigned char, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:34</i>
     */
    short device_readsnr(int icdev, byte nSnrLen, ByteBuffer sSnrData);

    /**
     * Original signature : <code>__int16 dev_writesnr(int, unsigned char, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:36</i><br>
     *
     * @deprecated use the safer methods {@link #dev_writesnr(mtx_32.Mtx_32Library.int, byte, ByteBuffer)} and {@link #dev_writesnr(mtx_32.Mtx_32Library.int, byte, Pointer)} instead
     */
    @Deprecated
    short dev_writesnr(int icdev, byte nSnrLen, Pointer sSnrData);

    /**
     * Original signature : <code>__int16 dev_writesnr(int, unsigned char, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:36</i>
     */
    short dev_writesnr(int icdev, byte nSnrLen, ByteBuffer sSnrData);

    /**
     * Original signature : <code>__int16 dev_readeeprom(int, unsigned short, unsigned short, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:39</i><br>
     *
     * @deprecated use the safer methods {@link #dev_readeeprom(mtx_32.Mtx_32Library.int, short, short, ByteBuffer)} and {@link #dev_readeeprom(mtx_32.Mtx_32Library.int, short, short, Pointer)} instead
     */
    @Deprecated
    short dev_readeeprom(int icdev, short nAddr, short nDLen, Pointer sReadData);

    /**
     * Original signature : <code>__int16 dev_readeeprom(int, unsigned short, unsigned short, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:39</i>
     */
    short dev_readeeprom(int icdev, short nAddr, short nDLen, ByteBuffer sReadData);

    /**
     * Original signature : <code>__int16 dev_writeeeprom(int, unsigned short, unsigned short, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:41</i><br>
     *
     * @deprecated use the safer methods {@link #dev_writeeeprom(mtx_32.Mtx_32Library.int, short, short, ByteBuffer)} and {@link #dev_writeeeprom(mtx_32.Mtx_32Library.int, short, short, Pointer)} instead
     */
    @Deprecated
    short dev_writeeeprom(int icdev, short nAddr, short nDLen, Pointer sWriteData);

    /**
     * Original signature : <code>__int16 dev_writeeeprom(int, unsigned short, unsigned short, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:41</i>
     */
    short dev_writeeeprom(int icdev, short nAddr, short nDLen, ByteBuffer sWriteData);

    /**
     * Original signature : <code>__int16 sam_slt_getstate(int, unsigned char, unsigned short*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:45</i><br>
     *
     * @deprecated use the safer methods {@link #sam_slt_getstate(mtx_32.Mtx_32Library.int, byte, ShortBuffer)} and {@link #sam_slt_getstate(mtx_32.Mtx_32Library.int, byte, ShortByReference)} instead
     */
    @Deprecated
    short sam_slt_getstate(int icdev, byte cardno, ShortByReference cardstate);

    /**
     * Original signature : <code>__int16 sam_slt_getstate(int, unsigned char, unsigned short*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:45</i>
     */
    short sam_slt_getstate(int icdev, byte cardno, ShortBuffer cardstate);

    /**
     * Original signature : <code>__int16 sam_slt_reset_baud(int, unsigned char, unsigned char, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:47</i><br>
     *
     * @deprecated use the safer methods {@link #sam_slt_reset_baud(mtx_32.Mtx_32Library.int, byte, byte, ByteBuffer, ByteBuffer)} and {@link #sam_slt_reset_baud(mtx_32.Mtx_32Library.int, byte, byte, Pointer, Pointer)} instead
     */
    @Deprecated
    short sam_slt_reset_baud(int icdev, byte cardno, byte resetBaud, Pointer rlen, Pointer resetdata);

    /**
     * Original signature : <code>__int16 sam_slt_reset_baud(int, unsigned char, unsigned char, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:47</i>
     */
    short sam_slt_reset_baud(int icdev, byte cardno, byte resetBaud, ByteBuffer rlen, ByteBuffer resetdata);

    /**
     * Original signature : <code>__int16 sam_slt_reset(int, unsigned short, unsigned char, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:49</i><br>
     *
     * @deprecated use the safer methods {@link #sam_slt_reset(mtx_32.Mtx_32Library.int, short, byte, ByteBuffer, ByteBuffer)} and {@link #sam_slt_reset(mtx_32.Mtx_32Library.int, short, byte, Pointer, Pointer)} instead
     */
    @Deprecated
    short sam_slt_reset(int icdev, short delaytime, byte cardno, Pointer rlen, Pointer resetdata);

    /**
     * Original signature : <code>__int16 sam_slt_reset(int, unsigned short, unsigned char, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:49</i>
     */
    short sam_slt_reset(int icdev, short delaytime, byte cardno, ByteBuffer rlen, ByteBuffer resetdata);

    /**
     * Original signature : <code>__int16 sam_slt_powerdown(int, unsigned char)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:51</i>
     */
    short sam_slt_powerdown(int icdev, byte cardno);

    /**
     * Original signature : <code>__int16 open_card(int, unsigned short, unsigned char*, unsigned char*, unsigned char*, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:55</i><br>
     *
     * @deprecated use the safer methods {@link #open_card(mtx_32.Mtx_32Library.int, short, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer)} and {@link #open_card(mtx_32.Mtx_32Library.int, short, Pointer, Pointer, Pointer, Pointer, Pointer)} instead
     */
    @Deprecated
    short open_card(int icdev, short delaytime, Pointer cardtype, Pointer snrlen, Pointer snr, Pointer rlen, Pointer recdata);

    /**
     * 函数功能：读写器在传递的时间内查寻卡是否进入感应区，并激活进入感应区的卡片。
     * 18
     * 函数声明: __int16 open_card(int icdev,unsigned short delaytime,unsigned char* cardtype,unsigned
     * char* snrlen,unsigned char* snr,unsigned char* rlen,unsigned char* recdata);
     * 入口参数: icdev:通讯设备标识符
     * delaytime 2 字节 等待卡进入感应区时间（单位：毫秒），高位字节在前
     * 0:无需等待，无卡直接返回
     * 0xffff:一直等待
     * 出口参数:
     * cardtype 1 字节 卡类型 0AH A 类卡； 0BH B 类卡
     * snrlen 1 字节 卡 UID 长度
     * snr 4 字节 卡 UID
     * rlen 1 字节 ATR 长度
     * recdata: ATR 应答数据
     * 返回值: <>0 错误
     * =0 正确
     * 举例: __int16 st;
     * unsigned char CardType=0;
     * unsigned char CardSnr[10]={0,0,0,0,0,0,0,0,0,0};
     * memset(CardSnr,0,40);
     * unsigned char RLen=0;
     * unsigned char RecData[40];
     * memset(RecData,0,40);
     * st=open_card(icdev,0,&CardType,CardSnr,&RLen,RecData);
     * 注： 由于调用该函数时，不一定有卡在感应区，很有可能需要较长的时间才能等到卡进感应区，故设定较长的时
     * 间给读写器，完全由读写器在这段时间等待对卡激活，如果超时了便返回“激活失败”。此命令的 delaytime 参数就是
     * 为了传递上述时间参数给读写器。如果 delaytime 参数为 0，在无卡进感应区时读写器不用等待直接返回“激活失败”；
     * 如果 delaytime 参数为 0xffff 时,一直寻卡，直到卡进入感应区；如果delaytime 参数为其它值时，读写器可在delaytime 时间内一直寻卡，直到超时了读 写器才返回“激活失败”，此时主机端也是采用 delaytime 作为超时退出时间。如果有
     * 卡在感应区但激活失败， 那么读写器不用继续寻卡就直接返回“激活失败”。
     */
    short open_card(int icdev, short delaytime, ByteBuffer cardtype, ByteBuffer snrlen, ByteBuffer snr, ByteBuffer rlen, ByteBuffer recdata);

    /**
     * Original signature : <code>__int16 rf_halt(int, unsigned short)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:57</i>
     */
    short rf_halt(int icdev, short delaytime);

    /**
     * Original signature : <code>__int16 card_APDU(int, unsigned char, int, unsigned char*, int*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:59</i><br>
     *
     * @deprecated use the safer methods {@link #card_APDU(mtx_32.Mtx_32Library.int, byte, int, ByteBuffer, IntBuffer, ByteBuffer)} and {@link #card_APDU(mtx_32.Mtx_32Library.int, byte, int, Pointer, IntByReference, Pointer)} instead
     */
    @Deprecated
    short card_APDU(int icdev, byte cardno, int slen, Pointer datasend, IntByReference rlen, Pointer datareceive);

    /**
     * Original signature : <code>__int16 card_APDU(int, unsigned char, int, unsigned char*, int*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:59</i>
     */
    short card_APDU(int icdev, byte cardno, int slen, ByteBuffer datasend, IntBuffer rlen, ByteBuffer datareceive);

    /**
     * Original signature : <code>__int16 rf_card(int, unsigned short, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:63</i><br>
     *
     * @deprecated use the safer methods {@link #rf_card(mtx_32.Mtx_32Library.int, short, ByteBuffer, ByteBuffer)} and {@link #rf_card(mtx_32.Mtx_32Library.int, short, Pointer, Pointer)} instead
     */
    @Deprecated
    short rf_card(int icdev, short delaytime, Pointer cardtype, Pointer cardID);

    /**
     * Original signature : <code>__int16 rf_card(int, unsigned short, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:63</i>
     */
    short rf_card(int icdev, short delaytime, ByteBuffer cardtype, ByteBuffer cardID);

    /**
     * Original signature : <code>__int16 rf_authentication(int, unsigned char, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:65</i><br>
     *
     * @deprecated use the safer methods {@link #rf_authentication(mtx_32.Mtx_32Library.int, byte, byte, ByteBuffer)} and {@link #rf_authentication(mtx_32.Mtx_32Library.int, byte, byte, Pointer)} instead
     */
    @Deprecated
    short rf_authentication(int icdev, byte mode, byte addr, Pointer key);

    /**
     * Original signature : <code>__int16 rf_authentication(int, unsigned char, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:65</i>
     */
    short rf_authentication(int icdev, byte mode, byte addr, ByteBuffer key);

    /**
     * Original signature : <code>__int16 rf_read(int, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:67</i><br>
     *
     * @deprecated use the safer methods {@link #rf_read(mtx_32.Mtx_32Library.int, byte, ByteBuffer)} and {@link #rf_read(mtx_32.Mtx_32Library.int, byte, Pointer)} instead
     */
    @Deprecated
    short rf_read(int icdev, byte addr, Pointer readdata);

    /**
     * Original signature : <code>__int16 rf_read(int, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:67</i>
     */
    short rf_read(int icdev, byte addr, ByteBuffer readdata);

    /**
     * Original signature : <code>__int16 rf_write(int, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:69</i><br>
     *
     * @deprecated use the safer methods {@link #rf_write(mtx_32.Mtx_32Library.int, byte, ByteBuffer)} and {@link #rf_write(mtx_32.Mtx_32Library.int, byte, Pointer)} instead
     */
    @Deprecated
    short rf_write(int icdev, byte addr, Pointer writedata);

    /**
     * Original signature : <code>__int16 rf_write(int, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:69</i>
     */
    short rf_write(int icdev, byte addr, ByteBuffer writedata);

    /**
     * Original signature : <code>__int16 rf_readval(int, unsigned char, unsigned long*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:71</i>
     */
    short rf_readval(int icdev, byte addr, NativeLongByReference readvalue);

    /**
     * Original signature : <code>__int16 rf_initval(int, unsigned char, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:73</i>
     */
    short rf_initval(int icdev, byte addr, NativeLong writevalue);

    /**
     * Original signature : <code>__int16 rf_increment(int, unsigned char, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:75</i>
     */
    short rf_increment(int icdev, byte addr, NativeLong incvalue);

    /**
     * Original signature : <code>__int16 rf_decrement(int, unsigned char, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:77</i>
     */
    short rf_decrement(int icdev, byte addr, NativeLong decvalue);

    /**
     * Original signature : <code>__int16 rf_transfer(int, unsigned char)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:79</i>
     */
    short rf_transfer(int icdev, byte nAdr);

    /**
     * Original signature : <code>__int16 CLCard_Open(int, unsigned short, unsigned char*, unsigned char*, unsigned char*, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:82</i><br>
     *
     * @deprecated use the safer methods {@link #CLCard_Open(mtx_32.Mtx_32Library.int, short, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer)} and {@link #CLCard_Open(mtx_32.Mtx_32Library.int, short, Pointer, Pointer, Pointer, Pointer, Pointer)} instead
     */
    @Deprecated
    short CLCard_Open(int icdev, short delaytime, Pointer cardtype, Pointer snrlen, Pointer snr, Pointer rlen, Pointer recdata);

    /**
     * Original signature : <code>__int16 CLCard_Open(int, unsigned short, unsigned char*, unsigned char*, unsigned char*, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:82</i>
     */
    short CLCard_Open(int icdev, short delaytime, ByteBuffer cardtype, ByteBuffer snrlen, ByteBuffer snr, ByteBuffer rlen, ByteBuffer recdata);

    /**
     * Original signature : <code>__int16 IDCard_Read(int, int*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:84</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_Read(mtx_32.Mtx_32Library.int, IntBuffer, ByteBuffer)} and {@link #IDCard_Read(mtx_32.Mtx_32Library.int, IntByReference, Pointer)} instead
     */
    @Deprecated
    short IDCard_Read(int icdev, IntByReference rlen, Pointer receivedata);

    /**
     * 函数功能：读取身份证上的数据
     * 函数声明：__int16 IDCard_Read(HANDLE icdev,int* rLen,unsigned char* receivedata);
     * 入口参数：icdev： 通讯标识符
     * 出口参数：rLen： 读取的数据的长度
     * Receivedata：读取的数据
     * 返回值： <>0 错误
     * =0 正确
     * 举例： __int16 st=0;
     * int RecLen=0;
     * unsigned char RecData[1024];
     * memset(RecData,0,1024);
     * st=IDCard_Read(icdev,&RecLen,RecData);
     */
    short IDCard_Read(int icdev, IntBuffer rlen, ByteBuffer receivedata);

    /**
     * Original signature : <code>__int16 IDCard_ReadCard(int, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:86</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_ReadCard(mtx_32.Mtx_32Library.int, ByteBuffer)} and {@link #IDCard_ReadCard(mtx_32.Mtx_32Library.int, Pointer)} instead
     */
    @Deprecated
    short IDCard_ReadCard(int icdev, Pointer message);

    /**

     */
    short IDCard_ReadCard(int icdev, ByteBuffer message);

    /**
     * Original signature : <code>int IDCard_ReadCard_Extra(int, char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:89</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_ReadCard_Extra(mtx_32.Mtx_32Library.int, ByteBuffer, ByteBuffer)} and {@link #IDCard_ReadCard_Extra(mtx_32.Mtx_32Library.int, Pointer, Pointer)} instead
     */
    @Deprecated
    int IDCard_ReadCard_Extra(int icdev, Pointer lpInPhoneSaveFile, Pointer message);

    /**
     * Original signature : <code>int IDCard_ReadCard_Extra(int, char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:89</i>
     */
    int IDCard_ReadCard_Extra(int icdev, ByteBuffer lpInPhoneSaveFile, ByteBuffer message);

    /**
     * Original signature : <code>__int16 IDCard_GetCardInfo(int, int, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:91</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_GetCardInfo(mtx_32.Mtx_32Library.int, int, ByteBuffer)} and {@link #IDCard_GetCardInfo(mtx_32.Mtx_32Library.int, int, Pointer)} instead
     */
    @Deprecated
    short IDCard_GetCardInfo(int icdev, int index, Pointer infodata);

    /**
     * 函数功能：根据索引获取身份证数据结构体中该下表所对应的数据
     * 函数声明：__int16 IDCard_GetCardInfo(HANDLE icdev,int index,char* infodata);
     * 入口参数：icdev： 通讯标识符
     * index： 索引值，取值范围（0-10）
     * 出口参数：infodata： 该索引对应的数据（长度在 4 到 70 之间，定义时字节长度要大于 70）
     * 返回值： <>0 错误
     * =0 正确
     * 举例： __int16 st=0;
     * int nIndex=0;
     * char cInfoData[72];
     * 28
     * memset(cInfoData,0,72);
     * st=IDCard_GetCardInfo(icdev,nIndex,cInfoData); //获取姓名
     * 索引值说明：0--姓名，1--性别，2--民族，3--出生日期，4--住址，5--公民身份号码，6--签发机
     * 关，7--有效期起始日期，8--有效期截止日期，9--预留区，10--照片文件名。
     */
    short IDCard_GetCardInfo(int icdev, int index, ByteBuffer infodata);

    /**
     * Original signature : <code>__int16 IDCard_GetModeID(int, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:93</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_GetModeID(mtx_32.Mtx_32Library.int, ByteBuffer, ByteBuffer)} and {@link #IDCard_GetModeID(mtx_32.Mtx_32Library.int, Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_GetModeID(int icdev, Pointer nIDLen, Pointer sIDData);

    /**
     * Original signature : <code>__int16 IDCard_GetModeID(int, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:93</i>
     */
    short IDCard_GetModeID(int icdev, ByteBuffer nIDLen, ByteBuffer sIDData);

    /**
     * Original signature : <code>__int16 IDCard_Read_IDNUM(int, int*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:96</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_Read_IDNUM(mtx_32.Mtx_32Library.int, IntBuffer, ByteBuffer)} and {@link #IDCard_Read_IDNUM(mtx_32.Mtx_32Library.int, IntByReference, Pointer)} instead
     */
    @Deprecated
    short IDCard_Read_IDNUM(int icdev, IntByReference rlen, Pointer receivedata);

    /**
     * Original signature : <code>__int16 IDCard_Read_IDNUM(int, int*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:96</i>
     */
    short IDCard_Read_IDNUM(int icdev, IntBuffer rlen, ByteBuffer receivedata);

    /**
     * Original signature : <code>__int16 IDCard_SetPhotoPath(char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:99</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_SetPhotoPath(ByteBuffer)} and {@link #IDCard_SetPhotoPath(Pointer)} instead
     */
    @Deprecated
    short IDCard_SetPhotoPath(Pointer photoPath);

    /**
     * 函数功能：设置二代证照片存储路径，不加照片名称。
     * 函数声明：__int16 __stdcall IDCard_SetPhotoPath( char* photoPath );
     * 入口参数：photoPath 存储绝对路径，结尾不加照片名称。
     * 出口参数：无
     * 返回值：<>0 错误
     * =0 正确
     * 举例： __int16 st=0;
     * St = IDCard_SetPhotoPath(“c:\\”);
     * 注意：传入的路径必须是合法路径，函数接口会去判断路径合法性。
     */
    short IDCard_SetPhotoPath(ByteBuffer photoPath);

    /**
     * Original signature : <code>__int16 IDCard_ReadCard_Ex(int, char*, char*, char*, char*, char*, char*, char*, char*, char*, char*, int, char*, int*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:104</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_ReadCard_Ex(mtx_32.Mtx_32Library.int, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, int, ByteBuffer, IntBuffer, ByteBuffer)} and {@link #IDCard_ReadCard_Ex(mtx_32.Mtx_32Library.int, Pointer, Pointer, Pointer, Pointer, Pointer, Pointer, Pointer, Pointer, Pointer, Pointer, int, Pointer, IntByReference, Pointer)} instead
     */
    @Deprecated
    short IDCard_ReadCard_Ex(int icdev, Pointer sName, Pointer sSex, Pointer sNation, Pointer sBirthday, Pointer sAddress, Pointer sIDNumber, Pointer sIssueDepartment, Pointer sValidFromDate, Pointer sValidExpiryDate, Pointer sReserve, int iSavePhoto, Pointer sPhotoBase64, IntByReference iPhotoBase64Len, Pointer message);

    /**
     * Original signature : <code>__int16 IDCard_ReadCard_Ex(int, char*, char*, char*, char*, char*, char*, char*, char*, char*, char*, int, char*, int*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:104</i>
     */
    short IDCard_ReadCard_Ex(int icdev,
                             ByteBuffer sName, ByteBuffer sSex,
                             ByteBuffer sNation, ByteBuffer sBirthday,
                             ByteBuffer sAddress, ByteBuffer sIDNumber,
                             ByteBuffer sIssueDepartment, ByteBuffer sValidFromDate,
                             ByteBuffer sValidExpiryDate, ByteBuffer sReserve,
                             int iSavePhoto, ByteBuffer sPhotoBase64,
                             IntBuffer iPhotoBase64Len, ByteBuffer message);

    /**
     * Original signature : <code>__int16 IDCard_SetPhotoName(char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:121</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_SetPhotoName(ByteBuffer)} and {@link #IDCard_SetPhotoName(Pointer)} instead
     */
    @Deprecated
    short IDCard_SetPhotoName(Pointer photoName);

    /**
     * 函数功能：设置二代证照片存储名字。
     * 函数声明：__int16 __stdcall IDCard_SetPhotoName( char* photoName );
     * 入口参数：photoName 存储的二代证照片名字
     * 出口参数：无
     * 返回值：<>0 错误
     * =0 正确
     * 举例： __int16 st=0;
     * St = IDCard_SetPhotoName(“zp”);
     * 注意：传入的存储照片的名字必须是合法的名字，函数接口会去判断名字合法性。
     */
    short IDCard_SetPhotoName(ByteBuffer photoName);

    /**
     * Original signature : <code>__int16 IDCard_PhotoSave_Ex(unsigned char*, int, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:122</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_PhotoSave_Ex(ByteBuffer, int, ByteBuffer)} and {@link #IDCard_PhotoSave_Ex(Pointer, int, Pointer)} instead
     */
    @Deprecated
    short IDCard_PhotoSave_Ex(Pointer cPhotoData, int nDataLen, Pointer strBmpFile);

    /**
     * Original signature : <code>__int16 IDCard_PhotoSave_Ex(unsigned char*, int, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:122</i>
     */
    short IDCard_PhotoSave_Ex(ByteBuffer cPhotoData, int nDataLen, ByteBuffer strBmpFile);

    /**
     * Original signature : <code>__int16 IDCard_Name(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:124</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_Name(ByteBuffer, ByteBuffer)} and {@link #IDCard_Name(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_Name(Pointer cUnicodeStr, Pointer cName);

    /**
     * Original signature : <code>__int16 IDCard_Name(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:124</i>
     */
    short IDCard_Name(ByteBuffer cUnicodeStr, ByteBuffer cName);

    /**
     * Original signature : <code>__int16 IDCard_Sex(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:125</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_Sex(ByteBuffer, ByteBuffer)} and {@link #IDCard_Sex(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_Sex(Pointer cUnicodeStr, Pointer cSex);

    /**
     * Original signature : <code>__int16 IDCard_Sex(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:125</i>
     */
    short IDCard_Sex(ByteBuffer cUnicodeStr, ByteBuffer cSex);

    /**
     * Original signature : <code>__int16 IDCard_Nation(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:126</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_Nation(ByteBuffer, ByteBuffer)} and {@link #IDCard_Nation(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_Nation(Pointer cANSIStr, Pointer cNation);

    /**
     * Original signature : <code>__int16 IDCard_Nation(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:126</i>
     */
    short IDCard_Nation(ByteBuffer cANSIStr, ByteBuffer cNation);

    /**
     * Original signature : <code>__int16 IDCard_Birthday(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:127</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_Birthday(ByteBuffer, ByteBuffer)} and {@link #IDCard_Birthday(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_Birthday(Pointer cUnicodeStr, Pointer cBirthday);

    /**
     * Original signature : <code>__int16 IDCard_Birthday(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:127</i>
     */
    short IDCard_Birthday(ByteBuffer cUnicodeStr, ByteBuffer cBirthday);

    /**
     * Original signature : <code>__int16 IDCard_Address(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:128</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_Address(ByteBuffer, ByteBuffer)} and {@link #IDCard_Address(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_Address(Pointer cUnicodeStr, Pointer cAddress);

    /**
     * Original signature : <code>__int16 IDCard_Address(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:128</i>
     */
    short IDCard_Address(ByteBuffer cUnicodeStr, ByteBuffer cAddress);

    /**
     * Original signature : <code>__int16 IDCard_IDNumber(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:129</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_IDNumber(ByteBuffer, ByteBuffer)} and {@link #IDCard_IDNumber(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_IDNumber(Pointer cUnicodeStr, Pointer cIDNumber);

    /**
     * Original signature : <code>__int16 IDCard_IDNumber(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:129</i>
     */
    short IDCard_IDNumber(ByteBuffer cUnicodeStr, ByteBuffer cIDNumber);

    /**
     * Original signature : <code>__int16 IDCard_IssueDepartment(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:130</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_IssueDepartment(ByteBuffer, ByteBuffer)} and {@link #IDCard_IssueDepartment(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_IssueDepartment(Pointer cUnicodeStr, Pointer cIssueDepartment);

    /**
     * Original signature : <code>__int16 IDCard_IssueDepartment(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:130</i>
     */
    short IDCard_IssueDepartment(ByteBuffer cUnicodeStr, ByteBuffer cIssueDepartment);

    /**
     * Original signature : <code>__int16 IDCard_ValidFromDate(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:131</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_ValidFromDate(ByteBuffer, ByteBuffer)} and {@link #IDCard_ValidFromDate(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_ValidFromDate(Pointer cUnicodeStr, Pointer cValidFromDate);

    /**
     * Original signature : <code>__int16 IDCard_ValidFromDate(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:131</i>
     */
    short IDCard_ValidFromDate(ByteBuffer cUnicodeStr, ByteBuffer cValidFromDate);

    /**
     * Original signature : <code>__int16 IDCard_ValidExpiryDate(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:132</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_ValidExpiryDate(ByteBuffer, ByteBuffer)} and {@link #IDCard_ValidExpiryDate(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_ValidExpiryDate(Pointer cUnicodeStr, Pointer cValidExpiryDate);

    /**
     * Original signature : <code>__int16 IDCard_ValidExpiryDate(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:132</i>
     */
    short IDCard_ValidExpiryDate(ByteBuffer cUnicodeStr, ByteBuffer cValidExpiryDate);

    /**
     * Original signature : <code>__int16 IDCard_Reserve(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:133</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_Reserve(ByteBuffer, ByteBuffer)} and {@link #IDCard_Reserve(Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_Reserve(Pointer cUnicodeStr, Pointer cReserve);

    /**
     * Original signature : <code>__int16 IDCard_Reserve(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:133</i>
     */
    short IDCard_Reserve(ByteBuffer cUnicodeStr, ByteBuffer cReserve);

    /**
     * Original signature : <code>void IDCard_GetPhotoFile(char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:134</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_GetPhotoFile(ByteBuffer)} and {@link #IDCard_GetPhotoFile(Pointer)} instead
     */
    @Deprecated
    void IDCard_GetPhotoFile(Pointer cfileName);

    /**
     * Original signature : <code>void IDCard_GetPhotoFile(char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:134</i>
     */
    void IDCard_GetPhotoFile(ByteBuffer cfileName);

    /**
     * Original signature : <code>int GetFileBase64Buffer(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:138</i><br>
     *
     * @deprecated use the safer methods {@link #GetFileBase64Buffer(ByteBuffer, ByteBuffer)} and {@link #GetFileBase64Buffer(Pointer, Pointer)} instead
     */
    @Deprecated
    int GetFileBase64Buffer(Pointer filename, Pointer WideString);

    /**
     * Original signature : <code>int GetFileBase64Buffer(char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:138</i>
     */
    int GetFileBase64Buffer(ByteBuffer filename, ByteBuffer WideString);

    /**
     * Original signature : <code>long hex_base64(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:140</i><br>
     *
     * @deprecated use the safer methods {@link #hex_base64(ByteBuffer, ByteBuffer, NativeLong)} and {@link #hex_base64(Pointer, Pointer, NativeLong)} instead
     */
    @Deprecated
    NativeLong hex_base64(Pointer hex, Pointer base64, NativeLong hexlen);

    /**
     * Original signature : <code>long hex_base64(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:140</i>
     */
    NativeLong hex_base64(ByteBuffer hex, ByteBuffer base64, NativeLong hexlen);

    /**
     * Original signature : <code>long base64_hex(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:142</i><br>
     *
     * @deprecated use the safer methods {@link #base64_hex(ByteBuffer, ByteBuffer, NativeLong)} and {@link #base64_hex(Pointer, Pointer, NativeLong)} instead
     */
    @Deprecated
    NativeLong base64_hex(Pointer base64, Pointer hex, NativeLong base64len);

    /**
     * Original signature : <code>long base64_hex(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:142</i>
     */
    NativeLong base64_hex(ByteBuffer base64, ByteBuffer hex, NativeLong base64len);

    /**
     * Original signature : <code>__int16 rf_encrypt(unsigned char*, unsigned char*, unsigned __int16, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:146</i><br>
     *
     * @deprecated use the safer methods {@link #rf_encrypt(ByteBuffer, ByteBuffer, short, ByteBuffer)} and {@link #rf_encrypt(Pointer, Pointer, short, Pointer)} instead
     */
    @Deprecated
    short rf_encrypt(Pointer key, Pointer ptrSource, short msgLen, Pointer ptrDest);

    /**
     * Original signature : <code>__int16 rf_encrypt(unsigned char*, unsigned char*, unsigned __int16, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:146</i>
     */
    short rf_encrypt(ByteBuffer key, ByteBuffer ptrSource, short msgLen, ByteBuffer ptrDest);

    /**
     * Original signature : <code>__int16 rf_decrypt(unsigned char*, unsigned char*, unsigned __int16, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:149</i><br>
     *
     * @deprecated use the safer methods {@link #rf_decrypt(ByteBuffer, ByteBuffer, short, ByteBuffer)} and {@link #rf_decrypt(Pointer, Pointer, short, Pointer)} instead
     */
    @Deprecated
    short rf_decrypt(Pointer key, Pointer ptrSource, short msgLen, Pointer ptrDest);

    /**
     * Original signature : <code>__int16 rf_decrypt(unsigned char*, unsigned char*, unsigned __int16, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:149</i>
     */
    short rf_decrypt(ByteBuffer key, ByteBuffer ptrSource, short msgLen, ByteBuffer ptrDest);

    /**
     * Original signature : <code>__int16 hex_asc(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:152</i><br>
     *
     * @deprecated use the safer methods {@link #hex_asc(ByteBuffer, ByteBuffer, NativeLong)} and {@link #hex_asc(Pointer, Pointer, NativeLong)} instead
     */
    @Deprecated
    short hex_asc(Pointer hex, Pointer asc, NativeLong length);

    /**
     * Original signature : <code>__int16 hex_asc(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:152</i>
     */
    short hex_asc(ByteBuffer hex, ByteBuffer asc, NativeLong length);

    /**
     * Original signature : <code>__int16 asc_hex(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:155</i><br>
     *
     * @deprecated use the safer methods {@link #asc_hex(ByteBuffer, ByteBuffer, NativeLong)} and {@link #asc_hex(Pointer, Pointer, NativeLong)} instead
     */
    @Deprecated
    short asc_hex(Pointer asc, Pointer hex, NativeLong length);

    /**
     * Original signature : <code>__int16 asc_hex(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:155</i>
     */
    short asc_hex(ByteBuffer asc, ByteBuffer hex, NativeLong length);

    /**
     * Original signature : <code>__int16 asc_dec(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:158</i><br>
     *
     * @deprecated use the safer methods {@link #asc_dec(ByteBuffer, ByteBuffer, NativeLong)} and {@link #asc_dec(Pointer, Pointer, NativeLong)} instead
     */
    @Deprecated
    short asc_dec(Pointer asc, Pointer dec, NativeLong length);

    /**
     * Original signature : <code>__int16 asc_dec(unsigned char*, unsigned char*, unsigned long)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:158</i>
     */
    short asc_dec(ByteBuffer asc, ByteBuffer dec, NativeLong length);

    /**
     * Original signature : <code>__int16 contact_settype(int, unsigned char, unsigned char)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:162</i>
     */
    short contact_settype(int icdev, byte cardno, byte cardtype);

    /**
     * Original signature : <code>__int16 contact_identifytype(int, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:164</i><br>
     *
     * @deprecated use the safer methods {@link #contact_identifytype(mtx_32.Mtx_32Library.int, byte, ByteBuffer)} and {@link #contact_identifytype(mtx_32.Mtx_32Library.int, byte, Pointer)} instead
     */
    @Deprecated
    short contact_identifytype(int icdev, byte cardno, Pointer cardtype);

    /**
     * Original signature : <code>__int16 contact_identifytype(int, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:164</i>
     */
    short contact_identifytype(int icdev, byte cardno, ByteBuffer cardtype);

    /**
     * Original signature : <code>__int16 contact_passwordinit(int, unsigned char, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:166</i><br>
     *
     * @deprecated use the safer methods {@link #contact_passwordinit(mtx_32.Mtx_32Library.int, byte, byte, ByteBuffer)} and {@link #contact_passwordinit(mtx_32.Mtx_32Library.int, byte, byte, Pointer)} instead
     */
    @Deprecated
    short contact_passwordinit(int icdev, byte cardno, byte pinlen, Pointer pinstr);

    /**
     * Original signature : <code>__int16 contact_passwordinit(int, unsigned char, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:166</i>
     */
    short contact_passwordinit(int icdev, byte cardno, byte pinlen, ByteBuffer pinstr);

    /**
     * Original signature : <code>__int16 contact_passwordcheck(int, unsigned char, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:168</i><br>
     *
     * @deprecated use the safer methods {@link #contact_passwordcheck(mtx_32.Mtx_32Library.int, byte, byte, ByteBuffer)} and {@link #contact_passwordcheck(mtx_32.Mtx_32Library.int, byte, byte, Pointer)} instead
     */
    @Deprecated
    short contact_passwordcheck(int icdev, byte cardno, byte pinlen, Pointer pinstr);

    /**
     * Original signature : <code>__int16 contact_passwordcheck(int, unsigned char, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:168</i>
     */
    short contact_passwordcheck(int icdev, byte cardno, byte pinlen, ByteBuffer pinstr);

    /**
     * Original signature : <code>__int16 contact_read(int, unsigned char, unsigned short, unsigned short, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:170</i><br>
     *
     * @deprecated use the safer methods {@link #contact_read(mtx_32.Mtx_32Library.int, byte, short, short, ByteBuffer)} and {@link #contact_read(mtx_32.Mtx_32Library.int, byte, short, short, Pointer)} instead
     */
    @Deprecated
    short contact_read(int icdev, byte cardno, short address, short rlen, Pointer readdata);

    /**
     * Original signature : <code>__int16 contact_read(int, unsigned char, unsigned short, unsigned short, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:170</i>
     */
    short contact_read(int icdev, byte cardno, short address, short rlen, ByteBuffer readdata);

    /**
     * Original signature : <code>__int16 contact_write(int, unsigned char, unsigned short, unsigned short, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:172</i><br>
     *
     * @deprecated use the safer methods {@link #contact_write(mtx_32.Mtx_32Library.int, byte, short, short, ByteBuffer)} and {@link #contact_write(mtx_32.Mtx_32Library.int, byte, short, short, Pointer)} instead
     */
    @Deprecated
    short contact_write(int icdev, byte cardno, short address, short wlen, Pointer writedata);

    /**
     * Original signature : <code>__int16 contact_write(int, unsigned char, unsigned short, unsigned short, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:172</i>
     */
    short contact_write(int icdev, byte cardno, short address, short wlen, ByteBuffer writedata);

    /**
     * Original signature : <code>__int16 device_writesnr(int, unsigned char, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:174</i><br>
     *
     * @deprecated use the safer methods {@link #device_writesnr(mtx_32.Mtx_32Library.int, byte, ByteBuffer)} and {@link #device_writesnr(mtx_32.Mtx_32Library.int, byte, Pointer)} instead
     */
    @Deprecated
    short device_writesnr(int icdev, byte nSnrLen, Pointer sSnrData);

    /**
     * Original signature : <code>__int16 device_writesnr(int, unsigned char, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:174</i>
     */
    short device_writesnr(int icdev, byte nSnrLen, ByteBuffer sSnrData);

    /**
     * Original signature : <code>__int16 magnetic_read(int, unsigned char, MagCard*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:177</i>
     */
    short magnetic_read(int icdev, byte timeout, MagCard mag_card);

    /**
     * Original signature : <code>__int16 set_magnetic_mode(int, unsigned char)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:178</i>
     */
    short set_magnetic_mode(int icdev, byte nmode);

    /**
     * Original signature : <code>__int16 des_encrypt(unsigned char*, unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:183</i><br>
     *
     * @deprecated use the safer methods {@link #des_encrypt(ByteBuffer, ByteBuffer, byte, ByteBuffer)} and {@link #des_encrypt(Pointer, Pointer, byte, Pointer)} instead
     */
    @Deprecated
    short des_encrypt(Pointer key, Pointer ptrSource, byte msgLen, Pointer ptrDest);

    /**
     * Original signature : <code>__int16 des_encrypt(unsigned char*, unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:183</i>
     */
    short des_encrypt(ByteBuffer key, ByteBuffer ptrSource, byte msgLen, ByteBuffer ptrDest);

    /**
     * Original signature : <code>__int16 des_decrypt(unsigned char*, unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:185</i><br>
     *
     * @deprecated use the safer methods {@link #des_decrypt(ByteBuffer, ByteBuffer, byte, ByteBuffer)} and {@link #des_decrypt(Pointer, Pointer, byte, Pointer)} instead
     */
    @Deprecated
    short des_decrypt(Pointer key, Pointer ptrSource, byte msgLen, Pointer ptrDest);

    /**
     * Original signature : <code>__int16 des_decrypt(unsigned char*, unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:185</i>
     */
    short des_decrypt(ByteBuffer key, ByteBuffer ptrSource, byte msgLen, ByteBuffer ptrDest);

    /**
     * Original signature : <code>__int16 des3_encrypt(unsigned char*, unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:187</i><br>
     *
     * @deprecated use the safer methods {@link #des3_encrypt(ByteBuffer, ByteBuffer, byte, ByteBuffer)} and {@link #des3_encrypt(Pointer, Pointer, byte, Pointer)} instead
     */
    @Deprecated
    short des3_encrypt(Pointer key, Pointer ptrSource, byte msgLen, Pointer ptrDest);

    /**
     * Original signature : <code>__int16 des3_encrypt(unsigned char*, unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:187</i>
     */
    short des3_encrypt(ByteBuffer key, ByteBuffer ptrSource, byte msgLen, ByteBuffer ptrDest);

    /**
     * Original signature : <code>__int16 des3_decrypt(unsigned char*, unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:189</i><br>
     *
     * @deprecated use the safer methods {@link #des3_decrypt(ByteBuffer, ByteBuffer, byte, ByteBuffer)} and {@link #des3_decrypt(Pointer, Pointer, byte, Pointer)} instead
     */
    @Deprecated
    short des3_decrypt(Pointer key, Pointer ptrSource, byte msgLen, Pointer ptrDest);

    /**
     * Original signature : <code>__int16 des3_decrypt(unsigned char*, unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:189</i>
     */
    short des3_decrypt(ByteBuffer key, ByteBuffer ptrSource, byte msgLen, ByteBuffer ptrDest);

    /**
     * Original signature : <code>__int16 pwd_decrypt(unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:192</i><br>
     *
     * @deprecated use the safer methods {@link #pwd_decrypt(ByteBuffer, byte, ByteBuffer)} and {@link #pwd_decrypt(Pointer, byte, Pointer)} instead
     */
    @Deprecated
    short pwd_decrypt(Pointer ptrSource, byte nDataLen, Pointer ptrDest);

    /**
     * Original signature : <code>__int16 pwd_decrypt(unsigned char*, unsigned char, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:192</i>
     */
    short pwd_decrypt(ByteBuffer ptrSource, byte nDataLen, ByteBuffer ptrDest);

    /**
     * Original signature : <code>__int16 mw_kb_downloadmainkey(int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:194</i><br>
     *
     * @deprecated use the safer methods {@link #mw_kb_downloadmainkey(mtx_32.Mtx_32Library.int, int, int, ByteBuffer)} and {@link #mw_kb_downloadmainkey(mtx_32.Mtx_32Library.int, int, int, Pointer)} instead
     */
    @Deprecated
    short mw_kb_downloadmainkey(int icdev, int destype, int mainkeyno, Pointer mainkey);

    /**
     * Original signature : <code>__int16 mw_kb_downloadmainkey(int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:194</i>
     */
    short mw_kb_downloadmainkey(int icdev, int destype, int mainkeyno, ByteBuffer mainkey);

    /**
     * Original signature : <code>__int16 mw_kb_downloaduserkey(int, int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:196</i><br>
     *
     * @deprecated use the safer methods {@link #mw_kb_downloaduserkey(mtx_32.Mtx_32Library.int, int, int, int, ByteBuffer)} and {@link #mw_kb_downloaduserkey(mtx_32.Mtx_32Library.int, int, int, int, Pointer)} instead
     */
    @Deprecated
    short mw_kb_downloaduserkey(int icdev, int destype, int mainkeyno, int userkeyno, Pointer userkey);

    /**
     * Original signature : <code>__int16 mw_kb_downloaduserkey(int, int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:196</i>
     */
    short mw_kb_downloaduserkey(int icdev, int destype, int mainkeyno, int userkeyno, ByteBuffer userkey);

    /**
     * Original signature : <code>__int16 mw_kb_activekey(int, int, int)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:198</i>
     */
    short mw_kb_activekey(int icdev, int mainkeyno, int userkeyno);

    /**
     * Original signature : <code>__int16 mw_kb_setpasslen(int, int)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:200</i>
     */
    short mw_kb_setpasslen(int icdev, int passlen);

    /**
     * Original signature : <code>__int16 mw_kb_settimeout(int, int)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:202</i>
     */
    short mw_kb_settimeout(int icdev, int timeout);

    /**
     * Original signature : <code>__int16 mw_kb_getpin(int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:204</i><br>
     *
     * @deprecated use the safer methods {@link #mw_kb_getpin(mtx_32.Mtx_32Library.int, int, ByteBuffer)} and {@link #mw_kb_getpin(mtx_32.Mtx_32Library.int, int, Pointer)} instead
     */
    @Deprecated
    short mw_kb_getpin(int icdev, int type, Pointer planpin);

    /**
     * Original signature : <code>__int16 mw_kb_getpin(int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:204</i>
     */
    short mw_kb_getpin(int icdev, int type, ByteBuffer planpin);

    /**
     * Original signature : <code>__int16 mw_kb_getenpin(int, int, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:206</i><br>
     *
     * @deprecated use the safer methods {@link #mw_kb_getenpin(mtx_32.Mtx_32Library.int, int, ByteBuffer, ByteBuffer)} and {@link #mw_kb_getenpin(mtx_32.Mtx_32Library.int, int, Pointer, Pointer)} instead
     */
    @Deprecated
    short mw_kb_getenpin(int icdev, int type, Pointer cardno, Pointer planpin);

    /**
     * Original signature : <code>__int16 mw_kb_getenpin(int, int, unsigned char*, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:206</i>
     */
    short mw_kb_getenpin(int icdev, int type, ByteBuffer cardno, ByteBuffer planpin);

    /**
     * Original signature : <code>__int16 get_device_status(int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:209</i><br>
     *
     * @deprecated use the safer methods {@link #get_device_status(mtx_32.Mtx_32Library.int, ByteBuffer)} and {@link #get_device_status(mtx_32.Mtx_32Library.int, Pointer)} instead
     */
    @Deprecated
    short get_device_status(int icdev, Pointer ndev_status);

    /**
     * 函数功能：获取设备状态，判断设备是否正常
     * 函数功能：__int16 __stdcall get_device_status(HANDLE icdev,unsigned char *ndev_status)
     * 入口参数：icdev 通讯设备标识符
     * 出口参数：ndev_status 设备状态字节 一字节 取值 0~3
     * 0 正常
     * 1 接触卡通道异常
     * 2 非接卡通道异常
     * 3 接触卡和非接卡通道异常
     * 4 安全模块通道异常
     * 5 接触卡和安全模块通道异常
     * 6 非接卡和安全模块通道异常
     * 7 接触卡、非接卡和安全模块通道异常
     * 返回值： <>0 错误
     * =0 正确
     * 举例： unsigned char ndev_status = 0;
     * int st=get_device_status(icdev,&ndev_status);
     */
    short get_device_status(int icdev, ByteBuffer ndev_status);

    /**
     * 函数功能：删除所有二代证照片文件（wlt 及 bmp 格式文件）。
     * 函数声明：__int16 __stdcall delete_all_photofile();
     * 入口参数：无
     * 出口参数：无
     * 返回值：<>0 错误
     * =0 正确
     * 举例： __int16 st=0;
     * St = delete_all_photofile();
     */
    short delete_all_photofile();

    /**
     * Original signature : <code>__int16 IDCard_ReadCard_ExTwo(int, bool, char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:216</i><br>
     *
     * @deprecated use the safer methods {@link #IDCard_ReadCard_ExTwo(mtx_32.Mtx_32Library.int, byte, ByteBuffer, ByteBuffer)} and {@link #IDCard_ReadCard_ExTwo(mtx_32.Mtx_32Library.int, byte, Pointer, Pointer)} instead
     */
    @Deprecated
    short IDCard_ReadCard_ExTwo(int icdev, byte bIsNeedBmpFile, Pointer lpInFilePath, Pointer message);

    /**
     * Original signature : <code>__int16 IDCard_ReadCard_ExTwo(int, bool, char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:216</i>
     */
    short IDCard_ReadCard_ExTwo(int icdev, byte bIsNeedBmpFile, ByteBuffer lpInFilePath, ByteBuffer message);

    /**
     * Original signature : <code>__int16 iWlttoBmp(const char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:217</i><br>
     *
     * @deprecated use the safer methods {@link #iWlttoBmp(String, ByteBuffer)} and {@link #iWlttoBmp(Pointer, Pointer)} instead
     */
    @Deprecated
    short iWlttoBmp(Pointer lpWltFilePath, Pointer message);

    /**
     * Original signature : <code>__int16 iWlttoBmp(const char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:217</i>
     */
    short iWlttoBmp(String lpWltFilePath, ByteBuffer message);

    /**
     * Original signature : <code>int srd_1604(int, int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:229</i><br>
     *
     * @deprecated use the safer methods {@link #srd_1604(mtx_32.Mtx_32Library.int, int, int, int, ByteBuffer)} and {@link #srd_1604(mtx_32.Mtx_32Library.int, int, int, int, Pointer)} instead
     */
    @Deprecated
    int srd_1604(int icdev, int zone, int offset, int len, Pointer data_buffer);

    /**
     * Original signature : <code>int srd_1604(int, int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:229</i>
     */
    int srd_1604(int icdev, int zone, int offset, int len, ByteBuffer data_buffer);

    /**
     * Original signature : <code>int swr_1604(int, int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:231</i><br>
     *
     * @deprecated use the safer methods {@link #swr_1604(mtx_32.Mtx_32Library.int, int, int, int, ByteBuffer)} and {@link #swr_1604(mtx_32.Mtx_32Library.int, int, int, int, Pointer)} instead
     */
    @Deprecated
    int swr_1604(int icdev, int zone, int offset, int len, Pointer data_buffer);

    /**
     * Original signature : <code>int swr_1604(int, int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:231</i>
     */
    int swr_1604(int icdev, int zone, int offset, int len, ByteBuffer data_buffer);

    /**
     * Original signature : <code>int wsc_1604(int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:233</i><br>
     *
     * @deprecated use the safer methods {@link #wsc_1604(mtx_32.Mtx_32Library.int, int, int, ByteBuffer)} and {@link #wsc_1604(mtx_32.Mtx_32Library.int, int, int, Pointer)} instead
     */
    @Deprecated
    int wsc_1604(int icdev, int zone, int len, Pointer data_buffer);

    /**
     * Original signature : <code>int wsc_1604(int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:233</i>
     */
    int wsc_1604(int icdev, int zone, int len, ByteBuffer data_buffer);

    /**
     * Original signature : <code>int ser_1604(int, int, int, int)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:235</i>
     */
    int ser_1604(int icdev, int zone, int offset, int len);

    /**
     * Original signature : <code>int csc_1604(int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:237</i><br>
     *
     * @deprecated use the safer methods {@link #csc_1604(mtx_32.Mtx_32Library.int, int, int, ByteBuffer)} and {@link #csc_1604(mtx_32.Mtx_32Library.int, int, int, Pointer)} instead
     */
    @Deprecated
    int csc_1604(int icdev, int zone, int len, Pointer data_buffer);

    /**
     * Original signature : <code>int csc_1604(int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:237</i>
     */
    int csc_1604(int icdev, int zone, int len, ByteBuffer data_buffer);

    /**
     * Original signature : <code>int cesc_1604(int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:239</i><br>
     *
     * @deprecated use the safer methods {@link #cesc_1604(mtx_32.Mtx_32Library.int, int, int, ByteBuffer)} and {@link #cesc_1604(mtx_32.Mtx_32Library.int, int, int, Pointer)} instead
     */
    @Deprecated
    int cesc_1604(int icdev, int zone, int len, Pointer data_buffer);

    /**
     * Original signature : <code>int cesc_1604(int, int, int, unsigned char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:239</i>
     */
    int cesc_1604(int icdev, int zone, int len, ByteBuffer data_buffer);

    /**
     * Original signature : <code>int fakefus_1604(int, int)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:241</i>
     */
    int fakefus_1604(int icdev, int mode);

    /**
     * Original signature : <code>int psnl_1604(int)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:243</i>
     */
    int psnl_1604(int icdev);

    /**
     * Original signature : <code>int iReadICCardNoAndName(int, int, unsigned char*, unsigned char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:246</i><br>
     *
     * @deprecated use the safer methods {@link #iReadICCardNoAndName(mtx_32.Mtx_32Library.int, int, ByteBuffer, ByteBuffer, ByteBuffer)} and {@link #iReadICCardNoAndName(mtx_32.Mtx_32Library.int, int, Pointer, Pointer, Pointer)} instead
     */
    @Deprecated
    int iReadICCardNoAndName(int icdev, int nCardType, Pointer ICCardNo, Pointer ICCardName, Pointer lpErrMsg);

    /**
     * Original signature : <code>int iReadICCardNoAndName(int, int, unsigned char*, unsigned char*, char*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:246</i>
     */
    int iReadICCardNoAndName(int icdev, int nCardType, ByteBuffer ICCardNo, ByteBuffer ICCardName, ByteBuffer lpErrMsg);

    /**
     * Original signature : <code>int GenF55(int, char*, char*, char*, char*, int*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:247</i><br>
     *
     * @deprecated use the safer methods {@link #GenF55(mtx_32.Mtx_32Library.int, ByteBuffer, ByteBuffer, ByteBuffer, ByteBuffer, IntBuffer)} and {@link #GenF55(mtx_32.Mtx_32Library.int, Pointer, Pointer, Pointer, Pointer, IntByReference)} instead
     */
    @Deprecated
    int GenF55(int icdev, Pointer aryInput, Pointer AIDList, Pointer serno, Pointer svalue, IntByReference svauelen);

    /**
     * Original signature : <code>int GenF55(int, char*, char*, char*, char*, int*)</code><br>
     * <i>native declaration : drivers\identity\mtx_32.h:247</i>
     */
    int GenF55(int icdev, ByteBuffer aryInput, ByteBuffer AIDList, ByteBuffer serno, ByteBuffer svalue, IntBuffer svauelen);

//    public static class int extends PointerType {
//        public int(Pointer address) {
//            super(address);
//        }
//
//        public int() {
//            super();
//        }
//    }

    ;
}
